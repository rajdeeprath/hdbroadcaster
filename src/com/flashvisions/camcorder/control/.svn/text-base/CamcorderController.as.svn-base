package com.flashvisions.camcorder.control
{
	import com.adobe.cairngorm.control.FrontController;
	import com.flashvisions.camcorder.commands.*;
	import com.flashvisions.camcorder.event.*;
	
	public class CamcorderController extends FrontController
	{
		public function CamcorderController()
		{
			super();
			init();
		}
		
		private function init():void
		{
			this.addCommand(ApplicationEvent.STARTUP,ApplicationStartUpCommand);
			this.addCommand(ApplicationEvent.SHUTDOWN,ApplicationShutDownCommand);
			this.addCommand(ApplicationEvent.SKIN,ApplicationSkinCommand);
			this.addCommand(ApplicationEvent.CONFIGURATION_LOAD,ConfigurationLoadCommand);
			this.addCommand(ApplicationEvent.CONFIGURATION_SUCCESS,ConfigurationSuccessCommand);
			this.addCommand(ApplicationEvent.CONFIGURATION_FAILED,ConfigurationFailedCommand);
			this.addCommand(ApplicationEvent.READY,ApplicationReadyCommand);
			this.addCommand(ApplicationEvent.FAILED,ApplicationFailedCommand);
			this.addCommand(ApplicationEvent.BANDWIDTHCHECK,BandwidthCheckCommand);
			this.addCommand(ApplicationEvent.BANDWIDTHDETECTED,BandwidthDetectedCommand);
			this.addCommand(ApplicationEvent.GETBITRATE,CalculateBitrateCommand);
			
			this.addCommand(BroadcastEvent.START,BroadcastStartCommand);
			this.addCommand(BroadcastEvent.STOP,BroadcastStopCommand);
			this.addCommand(BroadcastEvent.SAVE,BroadcastSaveCommand);
			this.addCommand(BroadcastEvent.APPLYPRESET,ApplyPresetCommand);
			this.addCommand(BroadcastEvent.CREATEBROADCASTGROUP,CreateBroadcastGroupCommand);
			this.addCommand(BroadcastEvent.STARTDURATIONMONITOR,StartDurationMonitorCommand);
			this.addCommand(BroadcastEvent.STOPDURATIONMONITOR,StopDurationMonitorCommand);
			
			this.addCommand(ConnectionEvent.CONNECT,ConnectionConnectCommand);
			this.addCommand(ConnectionEvent.DISCONNECT,ConnectionDisconnectCommand);
			this.addCommand(ConnectionEvent.SUCCESS,ConnectionSuccessCommand);
			this.addCommand(ConnectionEvent.FAILURE,ConnectionFailureCommand);
			this.addCommand(ConnectionEvent.ATTEMPTRECONNECT,AttemptReconnectionCommand);
			
			this.addCommand(CameraEvent.SOURCE_CHANGE,CameraChangeCommand);
			this.addCommand(CameraEvent.ACQUIRE,CameraAcquisitionCommand);
			this.addCommand(CameraEvent.INITIALIZE,CameraInitializeCommand);
			this.addCommand(CameraEvent.DEINITIALIZE,CameraReleaseCommand);
			this.addCommand(CameraEvent.SNAPSHOT,GeneratePreviewCommand);
			
			this.addCommand(MicrophoneEvent.SOURCE_CHANGE,MicrophoneChangeCommand);
			this.addCommand(MicrophoneEvent.ACQUIRE,MicrophoneAcquisitionCommand);
			this.addCommand(MicrophoneEvent.INITIALIZE,MicrophoneInitializeCommand);
			this.addCommand(MicrophoneEvent.DEINITIALIZE,MicrophoneReleaseCommand);
			
			this.addCommand(LicenceEvent.VALIDATION_SUCCESS,LicenceValidCommand);
			this.addCommand(LicenceEvent.VALIDATION_FAILURE,LicenceInvalidCommand);
			this.addCommand(LicenceEvent.VALIDATE,LicenceValidateCommand);
			this.addCommand(LicenceEvent.VERIFY,VerifyLicenseCommand);
			
			this.addCommand(StreamEvent.PUBLISHSTART,PublishStartCommand);
			this.addCommand(StreamEvent.PUBLISHSTOP,PublishStopCommand);
			this.addCommand(StreamEvent.PUBLISHFAILED,PublishFailedCommand);
			this.addCommand(StreamEvent.PUBLISHSUCCESS,PublishSuccessCommand);
			
			this.addCommand(NotificationEvent.NOTIFY,NotificationBroadcastCommand);
		}
	}
}