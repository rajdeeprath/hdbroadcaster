package com.flashvisions.camcorder.commands
{
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.commands.SequenceCommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.flashvisions.camcorder.event.ApplicationEvent;
	import com.flashvisions.camcorder.event.BroadcastEvent;
	import com.flashvisions.camcorder.event.CameraEvent;
	import com.flashvisions.camcorder.event.MicrophoneEvent;
	import com.flashvisions.camcorder.model.BroadcastModelLocator;
	import com.flashvisions.camcorder.vo.BroadcastPreset;
	
	import mx.collections.ArrayCollection;
	
	public class ApplyPresetCommand extends SequenceCommand implements ICommand
	{
		private var modelLocator:BroadcastModelLocator = BroadcastModelLocator.getInstance();
		
		override public function execute(event:CairngormEvent):void
		{
			var broadcastEvent:BroadcastEvent = event as BroadcastEvent;
			var settings:Object = broadcastEvent.params[0] as Object;
			
			/* Set UI Indexes */
			modelLocator.selectedFpsIndex = getItemIndexByProperty(modelLocator.fps,"fps",settings.fps);
			modelLocator.selectedMicRatesIndex = getItemIndexByProperty(modelLocator.micRates,"rate",settings.micrate);
			modelLocator.selecedResolutionIndex = getMultiItemIndexByProperty(modelLocator.resolution,"width","height",settings.width,settings.height);
			
			
			/* Apply Settings */
			modelLocator.cameraWidth = settings.width;
			modelLocator.cameraHeight = settings.height;
			modelLocator.cameraFPS = settings.fps;
			modelLocator.cameraKeyframe = settings.keyframe;
			modelLocator.cameraBandWidth = settings.bandwidth;
			modelLocator.videoQuality = settings.quality;
			modelLocator.micRate = settings.micrate;
			
			
			if(modelLocator.camera != null)
			CairngormEventDispatcher.getInstance().dispatchEvent(new CameraEvent(CameraEvent.INITIALIZE));
			if(modelLocator.mic != null)
			CairngormEventDispatcher.getInstance().dispatchEvent(new MicrophoneEvent(MicrophoneEvent.INITIALIZE));	
			
			/* Get Bitrate */
			CairngormEventDispatcher.getInstance().dispatchEvent(new ApplicationEvent(ApplicationEvent.GETBITRATE));
		}
		
		public function getItemIndexByProperty(array:ArrayCollection, property:String, value:String):Number
		{
			for (var i:Number = 0; i < array.length; i++)
			{
				var obj:Object = array.getItemAt(i) as Object;
				if (obj[property] == value)	return i;
			}
			
			return -1;
		}
		
		public function getMultiItemIndexByProperty(array:ArrayCollection, property1:String, property2:String, value1:String, value2:String):Number
		{
			for (var i:Number = 0; i < array.length; i++)
			{
				var obj:Object = array.getItemAt(i) as Object;
				if ((obj[property1] == value1)&&(obj[property2] == value2))	return i;
			}
			
			return -1;
		}
	}
}