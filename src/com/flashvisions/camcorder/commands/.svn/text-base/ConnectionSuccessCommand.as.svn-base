package com.flashvisions.camcorder.commands
{
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.flashvisions.camcorder.event.ApplicationEvent;
	import com.flashvisions.camcorder.event.BroadcastEvent;
	import com.flashvisions.camcorder.event.ConnectionEvent;
	import com.flashvisions.camcorder.event.LicenceEvent;
	import com.flashvisions.camcorder.event.NotificationEvent;
	import com.flashvisions.camcorder.model.BroadcastModelLocator;
	import com.flashvisions.commercial.flex.LicenceType;

	public class ConnectionSuccessCommand implements ICommand
	{
		private var modelLocator:BroadcastModelLocator = BroadcastModelLocator.getInstance();
		
		public function execute(event:CairngormEvent):void
		{
			modelLocator.isConnected = true;
			modelLocator.wasConnected = true;
			
			modelLocator.logger.writeLog("Connected to server");
			CairngormEventDispatcher.getInstance().dispatchEvent(new NotificationEvent(ConnectionEvent.SUCCESS));
			
			if(modelLocator.wasPublishing)CairngormEventDispatcher.getInstance().dispatchEvent(new BroadcastEvent(BroadcastEvent.START));
		
			/* Verify licence on each connect */
			if(modelLocator.appmode == LicenceType.REGISTERED)
			CairngormEventDispatcher.getInstance().dispatchEvent(new LicenceEvent(LicenceEvent.VERIFY));
		}
	}
}