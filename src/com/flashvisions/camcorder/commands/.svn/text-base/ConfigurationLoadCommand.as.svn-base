package com.flashvisions.camcorder.commands
{
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.flashvisions.camcorder.business.ConfigurationDelegate;
	import com.flashvisions.camcorder.event.ApplicationEvent;
	import com.flashvisions.camcorder.model.BroadcastModelLocator;
	import com.flashvisions.camcorder.server.RTMPServerType;
	import com.flashvisions.remoting.RemotingConnection;
	import com.yahoo.astra.fl.managers.PopUpManager;
	
	import flash.external.ExternalInterface;
	import flash.net.Responder;
	import flash.net.URLLoader;
	
	
	import mx.core.FlexGlobals;
	import mx.managers.PopUpManager;
	import mx.rpc.IResponder;
	import mx.rpc.events.FaultEvent;
	import mx.rpc.events.ResultEvent;
	
	
	public class ConfigurationLoadCommand implements ICommand,IResponder
	{
		[Bindable]
		private var modelLocator:BroadcastModelLocator = BroadcastModelLocator.getInstance();
		private var __settingsLoader:URLLoader;
		
		public function execute(event:CairngormEvent):void
		{
			var configurationDelegate:ConfigurationDelegate = new ConfigurationDelegate(this);
			configurationDelegate.loadSettings(modelLocator.configuration);
		}
		
		
		/* Responder Methods */
		
		public function result(event:Object):void
		{
			var rs:ResultEvent = event as ResultEvent;
			CairngormEventDispatcher.getInstance().dispatchEvent(new ApplicationEvent(ApplicationEvent.CONFIGURATION_SUCCESS,rs.result));
		}
		
		
		public function fault(event:Object):void
		{
			var fe:FaultEvent = event as FaultEvent;
			CairngormEventDispatcher.getInstance().dispatchEvent(new ApplicationEvent(ApplicationEvent.CONFIGURATION_FAILED,"Error loading configuration data"));
		}
		

	}
}