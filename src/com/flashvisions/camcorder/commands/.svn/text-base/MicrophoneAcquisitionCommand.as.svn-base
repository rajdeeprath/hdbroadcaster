package com.flashvisions.camcorder.commands
{
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.flashvisions.camcorder.event.ApplicationEvent;
	import com.flashvisions.camcorder.event.MicrophoneEvent;
	import com.flashvisions.camcorder.model.BroadcastModelLocator;
	
	import flash.events.StatusEvent;
	import flash.events.TimerEvent;
	import flash.external.ExternalInterface;
	import flash.media.Microphone;
	import flash.system.Security;
	import flash.system.SecurityPanel;
	import flash.utils.Timer;
	
	
	
	public class MicrophoneAcquisitionCommand implements ICommand
	{
		private static const SAMPLECOUNT:Number = 20; 
		private var modelLocator:BroadcastModelLocator = BroadcastModelLocator.getInstance();
		private var avlTimer:Timer;
		private var micActivityData:Number = 0;
		
		
		public function execute(event:CairngormEvent):void
		{
			acquireMicrophone();
		}
		
		private function acquireMicrophone():void
		{
			try
			{
				modelLocator.mic = Microphone.getMicrophone(modelLocator.micIndex);
				if(modelLocator.mic == null) throw new Error("No Microphone Found !");
				
				if(!modelLocator.mic.hasEventListener(StatusEvent.STATUS))
				modelLocator.mic.addEventListener(StatusEvent.STATUS,onMicStatus);
				modelLocator.mic.setLoopBack(true);
				
				if(modelLocator.mic.muted) Security.showSettings(SecurityPanel.PRIVACY);
				else deviceOk();
			}
			catch(e:Error)
			{
				Alert.show(e.message);	
			}
		}
		
		private function deviceOk():void
		{
			modelLocator.allowAudio = true;
			modelLocator.mic.setLoopBack(false);
			modelLocator.logger.writeLog("Microphone selected : "+modelLocator.mic.name);
			CairngormEventDispatcher.getInstance().dispatchEvent(new MicrophoneEvent(MicrophoneEvent.INITIALIZE));
		}
		
		private function deviceNotOk():void
		{
			modelLocator.allowAudio = false;
			acquireMicrophone();
		}
		
		
		/* Event Handler */
		
		private function onMicStatus(event:StatusEvent):void
		{
			if (event.code == "Microphone.Unmuted")deviceOk();
			else if (event.code == "Microphone.Muted")deviceNotOk();
		}
	}
}