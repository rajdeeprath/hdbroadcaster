package com.flashvisions.camcorder.commands
{
	import com.adobe.cairngorm.commands.ICommand;
	import com.adobe.cairngorm.control.CairngormEvent;
	import com.adobe.cairngorm.control.CairngormEventDispatcher;
	import com.flashvisions.camcorder.event.ApplicationEvent;
	import com.flashvisions.camcorder.event.MicrophoneEvent;
	import com.flashvisions.camcorder.event.NotificationEvent;
	import com.flashvisions.camcorder.model.BroadcastModelLocator;
	
	import flash.events.TimerEvent;
	import flash.external.ExternalInterface;
	import flash.media.SoundCodec;
	
	public class MicrophoneInitializeCommand implements ICommand
	{
		[Bindable]
		private var modelLocator:BroadcastModelLocator = BroadcastModelLocator.getInstance();
		
		public function execute(event:CairngormEvent):void
		{
			modelLocator.mic.setSilenceLevel(30);
			modelLocator.mic.gain = modelLocator.micGain;
			modelLocator.mic.setUseEchoSuppression(true);
			modelLocator.mic.encodeQuality = modelLocator.encodeQuality;
			
			modelLocator.logger.writeLog("Microphone settings changed");
			
			if(modelLocator.audioCodec == SoundCodec.SPEEX)modelLocator.mic.rate = 16;
			else modelLocator.mic.rate = modelLocator.micRate;
						
			CairngormEventDispatcher.getInstance().dispatchEvent(new ApplicationEvent(ApplicationEvent.GETBITRATE));
			CairngormEventDispatcher.getInstance().dispatchEvent(new NotificationEvent(MicrophoneEvent.INITIALIZE,modelLocator.mic.name));
		}
		
		private function onTimer(t:TimerEvent):void
		{
			modelLocator.micActiivity = modelLocator.mic.activityLevel/10;
		}
		
	}
}